{"version":3,"sources":["src/index.js"],"names":["statusDisplay","document","querySelector","gameActive","currentPlayer","gameState","winningMessage","drawMessage","handleCellPlayed","clickedCell","clickedCellIndex","innerHTML","handlePlayerChange","innerText","winningConditions","handleResultValidation","roundWon","i","winCondition","a","b","c","includes","handleCellClick","clickedCellEvent","target","getAttribute","handleRestartGame","querySelectorAll","forEach","cell","addEventListener","gameRestart"],"mappings":";AAAA,IAAMA,EAAgBC,SAASC,cAAc,gBAEzCC,GAAa,EAEbC,EAAgB,IAEhBC,EAAY,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAE3CC,EAA2BF,UAAAA,OAAAA,EAAjC,aAEMG,EAAN,wBAIMC,EAAmB,SAAUC,EAAaC,GAC9CL,EAAUK,GAAoBN,EAC9BK,EAAYE,UAAYP,GAEpBQ,EAAqB,WACzBR,EAAkC,MAAlBA,EAAwB,IAAM,IAC9CJ,EAAca,UAAoBT,QAAAA,OAAAA,EAAlC,YAGIU,EAAoB,CACxB,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAGHC,EAAyB,WAE7B,IADA,IAAIC,GAAW,EACNC,EAAI,EAAGA,GAAK,EAAGA,IAAK,CAC3B,IAAMC,EAAeJ,EAAkBG,GACnCE,EAAId,EAAUa,EAAa,IAC3BE,EAAIf,EAAUa,EAAa,IAC3BG,EAAIhB,EAAUa,EAAa,IAC/B,GAAU,KAANC,GAAkB,KAANC,GAAkB,KAANC,IAGxBF,IAAMC,GAAKA,IAAMC,GAAG,CACtBL,GAAW,EACX,OAGJ,OAAIA,GACFhB,EAAca,UAAYP,OAC1BH,GAAa,IAGEE,EAAUiB,SAAS,SAMpCV,KAJEZ,EAAca,UAAYN,OAC1BJ,GAAa,KAMXoB,EAAkB,SAAUC,GAChC,IAAMf,EAAce,EAAiBC,OAC/Bf,EAAmBD,EAAYiB,aAAa,mBACd,KAAhCrB,EAAUK,IAA6BP,IAG3CK,EAAiBC,EAAaC,GAC9BK,MAGF,SAASY,IACPxB,GAAa,EACbC,EAAgB,IAChBC,EAAY,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAC7CL,EAAca,UAAoBT,QAAAA,OAAAA,EAAlC,WACAH,SAAS2B,iBAA0BC,SAAAA,QAAQ,SAAUC,GACnDA,EAAKnB,UAAY,KAIrB,IAAMmB,EAAO7B,SAAS2B,iBAAiB,SACvCE,EAAKD,QAAQ,SAAUC,GACrBA,EAAKC,iBAAiB,QAASR,KAEjC,IAAMS,EAAc/B,SAASC,cAAc,iBAC3C8B,EAAYD,iBAAiB,QAAS,WACpCJ","file":"src.a01d1b59.js","sourceRoot":"..","sourcesContent":["const statusDisplay = document.querySelector(\".game-status\");\n\nlet gameActive = true;\n\nlet currentPlayer = \"X\";\n\nlet gameState = [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"];\n\nconst winningMessage = `Player ${currentPlayer} has won!`;\n\nconst drawMessage = `Game ended in a draw!`;\n\n// statusDisplay.innerText = currentPlayer\n\nconst handleCellPlayed = function (clickedCell, clickedCellIndex) {\n  gameState[clickedCellIndex] = currentPlayer;\n  clickedCell.innerHTML = currentPlayer;\n};\nconst handlePlayerChange = function () {\n  currentPlayer = currentPlayer === \"X\" ? \"O\" : \"X\";\n  statusDisplay.innerText = `It's ${currentPlayer}'s turn`;\n};\n\nconst winningConditions = [\n  [0, 1, 2],\n  [3, 4, 5],\n  [6, 7, 8],\n  [0, 3, 6],\n  [1, 4, 7],\n  [2, 5, 8],\n  [0, 4, 8],\n  [2, 4, 6]\n];\n\nconst handleResultValidation = function () {\n  let roundWon = false;\n  for (let i = 0; i <= 7; i++) {\n    const winCondition = winningConditions[i];\n    let a = gameState[winCondition[0]];\n    let b = gameState[winCondition[1]];\n    let c = gameState[winCondition[2]];\n    if (a === \"\" || b === \"\" || c === \"\") {\n      continue;\n    }\n    if (a === b && b === c) {\n      roundWon = true;\n      break;\n    }\n  }\n  if (roundWon) {\n    statusDisplay.innerText = winningMessage;\n    gameActive = false;\n    return;\n  }\n  let roundDraw = !gameState.includes(\"\");\n  if (roundDraw) {\n    statusDisplay.innerText = drawMessage;\n    gameActive = false;\n    return;\n  }\n  handlePlayerChange();\n};\n\nconst handleCellClick = function (clickedCellEvent) {\n  const clickedCell = clickedCellEvent.target;\n  const clickedCellIndex = clickedCell.getAttribute(\"data-cell-index\");\n  if (gameState[clickedCellIndex] !== \"\" || !gameActive) {\n    return;\n  }\n  handleCellPlayed(clickedCell, clickedCellIndex);\n  handleResultValidation();\n};\n\nfunction handleRestartGame() {\n  gameActive = true;\n  currentPlayer = \"X\";\n  gameState = [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"];\n  statusDisplay.innerText = `It's ${currentPlayer}'s turn`;\n  document.querySelectorAll(`.cell`).forEach(function (cell) {\n    cell.innerHTML = \"\";\n  });\n}\n\nconst cell = document.querySelectorAll(\".cell\");\ncell.forEach(function (cell) {\n  cell.addEventListener(\"click\", handleCellClick);\n});\nconst gameRestart = document.querySelector(\".game-restart\");\ngameRestart.addEventListener(\"click\", function () {\n  handleRestartGame();\n});\n"]}